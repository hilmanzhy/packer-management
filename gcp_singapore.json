{
  "variables": {
      "project_id": "{{env `project_id`}}",
      "service_account_file": "{{env `service_account_file`}}",
      "singapore_region": "{{env `singapore_region`}}",
      "singapore_zone": "{{env `singapore_zone`}}",
      "gcp_zerotier": "{{env `gcp_zerotier`}}"
  },
  "builders": [
    {
      "type": "googlecompute",
      "project_id": "supernet-291711",
      "machine_type": "e2-small",
      "source_image": "ubuntu-2204-jammy-v20221206",
      "source_image_family": "ubuntu-2204-lts",
      "region": "{{user `singapore_region`}}",
      "zone": "asia-southeast1-b",
      "image_description": "packer-gcp",
      "image_name": "packer",
      "disk_size": 30,
      "account_file": "{{user `service_account_file`}}",
      "ssh_username": "ubuntu",
      "ssh_port": 22,
      "ssh_keypair_name": "hilmanzhy",
      "ssh_private_key_file": "/home/anonym/immobi/remote_server/aws.pem"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
        "inline": [
          "sudo add-apt-repository universe",
          "sudo apt-get update",
          "sudo apt install -y python3-pip",
          "sudo pip3 install docker",
          "sudo curl -fsSL https://get.docker.com -o get-docker.sh",
          "sudo sh get-docker.sh",
          "sudo usermod -aG docker ubuntu",
          "sudo curl -s https://install.zerotier.com | sudo bash",
          "sudo zerotier-cli join {{user `gcp_zerotier`}}",
          "sudo mkdir /home/ubuntu/script"
        ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/git_clone_python.yml",
          "extra_arguments": [
            "-t",
            "git",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/git_clone_prometheus.yml",
          "extra_arguments": [
            "-t",
            "git",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    },
    {
      "type": "shell",
        "inline": [
          "sudo cp -r /home/ubuntu/script/* /opt",
          "sudo useradd --no-create-home --shell /bin/false prometheus",
          "sudo mkdir /var/lib/prometheus",
          "sudo chown prometheus:prometheus /etc/prometheus",
          "sudo chown prometheus:prometheus /var/lib/prometheus",
          "sudo curl -LO https://github.com/prometheus/prometheus/releases/download/v2.17.1/prometheus-2.17.1.linux-amd64.tar.gz",
          "sudo tar xzvf prometheus-2.17.1.linux-amd64.tar.gz",
          "sudo cp prometheus-2.17.1.linux-amd64/prometheus /usr/local/bin",
          "sudo cp prometheus-2.17.1.linux-amd64/promtool /usr/local/bin",
          "sudo chown prometheus:prometheus /usr/local/bin/prometheus",
          "sudo chown prometheus:prometheus /usr/local/bin/promtool",
          "sudo cp -r prometheus-2.17.1.linux-amd64/consoles /etc/prometheus/",
          "sudo cp -r prometheus-2.17.1.linux-amd64/console_libraries /etc/prometheus/",
          "sudo chown -R prometheus:prometheus /etc/prometheus/consoles",
          "sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries"
        ]
    },
    {
      "type": "shell",
        "inline": [
          "sudo cp /etc/prometheus/prometheus.service /etc/systemd/system/prometheus.service",
          "sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml",
          "sudo systemctl daemon-reload",
          "sudo systemctl enable prometheus",
          "sudo systemctl start prometheus"
        ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/setup_docker.yml",
          "extra_arguments": [
            "-t",
            "login",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/docker_traceroute.yml",
          "extra_arguments": [
            "-t",
            "pull_docker",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/docker_ping.yml",
          "extra_arguments": [
            "-t",
            "pull_docker_ping",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/docker_api.yml",
          "extra_arguments": [
            "-t",
            "pull_docker",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    },
    {
      "type": "ansible",
          "user": "ubuntu",
          "use_proxy": false,
          "keep_inventory_file": true,
          "playbook_file": "ansible/change_ssh.yml",
          "extra_arguments": [
            "-t",
            "sshd",
            "--extra-vars",
            "\"ansible_user=ubuntu ansible_host={{ build `Host` }} ansible_port=22 ansible_ssh_common_args='-o StrictHostKeyChecking=no'\""
          ],
          "ansible_env_vars": [
            "ANSIBLE_HOST_KEY_CHECKING=False"
          ]
    }
  ]
}
